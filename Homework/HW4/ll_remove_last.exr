(* Daniel Storms, Haig Emirzian *)
(* I pledge my honor that I have abided by the Stevens Honor System.*)

(* Example 1 *)

let l1 = { head <= 0; size <= 0} (* 0 in head signals null *)
in let add_front = proc (x) { proc (l) {
   	      begin
	         l.head <={ data <=x; next <= l.head };
		 l.size <= l.size+1
              end
	      } }

in letrec remove_last_helper(n) =
  if number?(n.next.next)
  then n.next <= 0
  else (remove_last_helper n.next)

in let remove_last = proc (l) {
  begin
  if number?(l.head.next)
  then l.head.next <= 0
  else (remove_last_helper l.head);
  l.size <= l.size - 1
  end
}

in begin
     ((add_front 2) l1);
     ((add_front 3) l1);
     ((add_front 4) l1);
     (remove_last l1);
     debug(l1)  (* required inspect the list *)
   end